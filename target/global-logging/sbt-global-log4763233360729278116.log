[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\PC\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\PC\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (Oracle Corporation Java 11.0.7)
[debug]       Load.loadUnit: plugins took 119.2536ms
[debug]       Load.loadUnit: defsScala took 0.3691ms
[debug] [Loading] Scanning directory C:\Users\PC\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\PC\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 21.8595 ms
[debug]           Load.resolveProject(global-plugins) took 53.781ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\PC\.sbt\1.0\plugins, plugins: List(<none>))) took 125.898ms
[debug] [Loading] Done in C:\Users\PC\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 157.7878ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3249ms
[debug]     Load.loadUnit(file:/C:/Users/PC/.sbt/1.0/plugins/, ...) took 288.8789ms
[debug]   Load.apply: load took 487.5884ms
[debug]   Load.apply: resolveProjects took 8.6954ms
[debug]   Load.apply: finalTransforms took 70.586ms
[debug]   Load.apply: config.delegates took 8.4331ms
[debug]   Load.apply: Def.make(settings)... took 1510.8363ms
[debug]   Load.apply: structureIndex took 88.1992ms
[debug]   Load.apply: mkStreams took 2.1043ms
[info] loading global plugins from C:\Users\PC\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5953.0173ms
[debug]           Load.loadUnit: plugins took 33.7627ms
[debug]           Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\PC\Downloads\Projet\Projet\project
[debug]             Load.loadUnit: mkEval took 11.293ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\PC\Downloads\Projet\Projet\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.499 ms
[info] loading settings for project projet-build from idea.sbt ...
[debug]               Load.resolveProject(projet-build) took 3.378ms
[debug]             Load.loadTransitive: finalizeProject(Project(id projet-build, base: C:\Users\PC\Downloads\Projet\Projet\project, plugins: List(<none>))) took 5.3933ms
[debug] [Loading] Done in C:\Users\PC\Downloads\Projet\Projet\project, returning: (projet-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3043.0437ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.476ms
[debug]         Load.loadUnit(file:/C:/Users/PC/Downloads/Projet/Projet/project/, ...) took 3083.7026ms
[debug]       Load.apply: load took 3085.8861ms
[debug]       Load.apply: resolveProjects took 0.2027ms
[debug]       Load.apply: finalTransforms took 14.2579ms
[debug]       Load.apply: config.delegates took 0.4429ms
[debug]       Load.apply: Def.make(settings)... took 136.9511ms
[debug]       Load.apply: structureIndex took 40.9499ms
[debug]       Load.apply: mkStreams took 0.0052ms
[info] loading project definition from C:\Users\PC\Downloads\Projet\Projet\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4906.8634ms
[debug]     Load.loadUnit: defsScala took 0.0066ms
[debug] [Loading] Scanning directory C:\Users\PC\Downloads\Projet\Projet
[debug]       Load.loadUnit: mkEval took 2.0101ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\PC\Downloads\Projet\Projet, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2684 ms
[info] loading settings for project projet from build.sbt ...
[debug]         Load.resolveProject(projet) took 36.9424ms
[debug]       Load.loadTransitive: finalizeProject(Project(id projet, base: C:\Users\PC\Downloads\Projet\Projet, plugins: List(<none>))) took 40.5524ms
[debug] [Loading] Done in C:\Users\PC\Downloads\Projet\Projet, returning: (projet)
[debug]     Load.loadUnit: loadedProjectsRaw took 1912.4366ms
[debug]     Load.loadUnit: cleanEvalClasses took 24.345ms
[debug]   Load.loadUnit(file:/C:/Users/PC/Downloads/Projet/Projet/, ...) took 6844.5708ms
[debug] Load.apply: load took 6846.6912ms
[debug] Load.apply: resolveProjects took 0.0769ms
[debug] Load.apply: finalTransforms took 29.463ms
[debug] Load.apply: config.delegates took 0.8488ms
[debug] Load.apply: Def.make(settings)... took 164.1769ms
[debug] Load.apply: structureIndex took 22.8453ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to pÃ© (in build file:/C:/Users/PC/Downloads/Projet/Projet/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54366 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54366, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to pÃ© (in build file:/C:/Users/PC/Downloads/Projet/Projet/)
[debug] > Exec(idea-shell, None, None)
